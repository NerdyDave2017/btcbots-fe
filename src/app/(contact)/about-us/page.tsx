"use client";
import React, { useEffect, useRef, useState } from "react";
import Hero from "../components/hero";
import Container from "../../components/container";
import aboutus from "@/public/assets/images/about-us.png";
import Image from "next/image";
import { ArrowRight, Checkmark } from "@/public/assets/icons";

const page = () => {
  const slider = useRef<HTMLDivElement>(null);
  const card = useRef<HTMLDivElement>(null);

  const slideLeft = () => {
    if (!slider.current) return;
    if (!card.current) return;

    slider.current.scrollBy({
      left: -(slider.current.scrollWidth / 3),
      behavior: "smooth",
    });
  };

  const slideRight = () => {
    if (!slider.current) return;
    if (!card.current) return;

    slider.current.scrollBy({
      left: slider.current.scrollWidth / 3,
      behavior: "smooth",
    });
  };

  const coreFeatures = [
    {
      name: "Automated Trading",
      description:
        "Our algorithms execute trades based on proven strategies, balancing position size, entry price, and risk exposure.",
    },
    {
      name: "Data Transparency",
      description:
        "We continuously refine our strategies and present valuable data patterns in our Data Room.",
    },
  ];

  const solve = [
    {
      name: "Addressing cash-flow needs",
      description:
        "Digital assets often lack stable cash flow, unlike traditional investments like real estate, restaurants, or dividend stocks.",
    },
    {
      name: "Automated Trading",
      description:
        "Our automated trading strategies generate consistent passive liquid income from crypto's volatility, addressing cash flow needs effectively.",
    },
    {
      name: "Reduced Counterparty Risks",
      description:
        "Traditional investments involve multiple intermediaries, increasing risk. BTCBOTS minimizes these risks by streamlining transactions directly between traders and the market, ensuring complete control while generating passive income independently.",
    },
  ];

  const keynotes = [
    {
      name: "Referral Program",
      items: [
        "Income Share: 25% of all income generated by referred clients.",
        "No Active Service Requirement: Participation doesn't require active service.",
        "Immediate Earnings Access: After client invoice settlement.",
      ],
    },
    {
      name: "Customer Support and Education",
      items: [
        "Resources: Comprehensive frequently asked questions and educational materials.",
        "Support Team: Available via the app’s chat system and email.",
        "AI Assistance: A trained large language model (Ai) ready to answer service-related questions.",
      ],
    },
    {
      name: "Risk Management",
      items: [
        "Diversification: Across exchanges, strategies, and assets.",
        "Non-Custodial Approach: Minimizes counterparty risks.",
        "Sophisticated Tools: For risk assessment and management.",
      ],
    },
    // {
    //   name: "Referral Program",
    //   items: [
    //     "Income Share: 25% of all income generated by referred clients.",
    //     "No Active Service Requirement: Participation doesn't require active service.",
    //     "Immediate Earnings Access: After client invoice settlement.",
    //   ],
    // },
    // {
    //   name: "Customer Support and Education",
    //   items: [
    //     "Resources: Comprehensive frequently asked questions and educational materials.",
    //     "Support Team: Available via the app’s chat system and email.",
    //     "AI Assistance: A trained large language model (Ai) ready to answer service-related questions.",
    //   ],
    // },
    // {
    //   name: "Risk Management",
    //   items: [
    //     "Diversification: Across exchanges, strategies, and assets.",
    //     "Non-Custodial Approach: Minimizes counterparty risks.",
    //     "Sophisticated Tools: For risk assessment and management.",
    //   ],
    // },
  ];

  return (
    <div className="">
      <Hero title="About Us" />
      <Container>
        <div className="w-full">
          <div className="mx-auto my-12 max-w-[803.18px] text-[#090909] text-base md:text-lg font-light">
            BTCBOTS is fintech software specializing in automated algorithmic
            trading. It facilitates seamless trading of blue-chip digital assets
            such as Bitcoin, Ether, Solana, and leading stable coins.
            <br /> <br />
            Our mission is to democratize access to advanced trading tools,
            typically reserved for hedge funds and institutional investors,
            enabling all users to optimize their capital effectively.
          </div>

          <div className="w-full mt-12 mb-24">
            <div className="text-center text-[#006fe3] text-[24px] md:text-[28px] xl:text-[32px] font-normal">
              Core Features
            </div>

            <div className="w-full flex flex-col md:flex-row items-center justify-center gap-10 mt-12">
              {coreFeatures.map((feature, index) => (
                <div
                  key={index}
                  className="w-full md:w-[480px] xl:w-[531px] h-[200px] md:h-[250px] xl:h-[277.88px] px-8 bg-[#e8f0f7] rounded-lg flex-col justify-center items-end inline-flex"
                >
                  <div className="self-stretch text-center">
                    <span className="text-[#090909] text-lg md:text-xl font-normal font-['Sora']">
                      {feature.name}
                      <br />
                    </span>
                    <span className="text-[#090909] text-lg md:text-2xl font-normal font-['Sora']">
                      <br />
                    </span>
                    <span className="text-[#090909] text-base md:text-lg font-normal font-['Sora']">
                      {feature.description}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </Container>
      <div className="h-auto bg-[#F4F6F8] w-full my-12 py-10  md:py-[100px]">
        <div className="text-center text-[#006fe3] text-[24px] md:text-[28px] xl:text-[32px]] font-normal">
          What does BTCBOTS solve for?
        </div>

        <div className="w-full mt-12 flex flex-col lg:flex-row items-center justify-center gap-10 before:">
          <Image src={aboutus} className="w-[351.17px] h-[363px]" alt="" />
          <div className="w-full px-5 md:px-0 max-w-[591.80px] flex-col justify-start items-start gap-8 inline-flex">
            {solve.map((item, index) => (
              <div key={index} className="card self-stretch">
                <span className="name text-[#090909] text-lg font-semibold font-['Sora']">
                  {item.name}
                  <br />
                </span>
                <span className="text-[#090909] text-lg font-light font-['Sora']">
                  {item.description}
                </span>
              </div>
            ))}
          </div>
        </div>
      </div>
      <Container>
        <div className="w-full my-10 md:my-[100px] overflow-clip">
          <div className="w-full flex items-center justify-between mb-6">
            <div className="text-center text-[#006fe3] text-[24px] md:text-[28px] xl:text-[32px] font-normal font-['Sora']">
              Other important keynotes
            </div>

            <div className="flex gap-3 text-[#006fe3]">
              <div
                onClick={slideLeft}
                className="px-2 py-1.5 bg-[#e8f0f7] rounded justify-start items-center gap-3 inline-flex cursor-pointer"
              >
                <ArrowRight className="w-6 h-6 rotate-180" />
              </div>
              <div
                onClick={slideRight}
                className="px-2 py-1.5 bg-[#e8f0f7] rounded justify-start items-center gap-3 inline-flex cursor-pointer"
              >
                <ArrowRight className="w-6 h-6 " />
              </div>
            </div>
          </div>

          <div
            ref={slider}
            id="slider"
            className="w-auto flex overflow-scroll gap-2 md:gap-4 xl:gap-8"
          >
            {keynotes.map((keynote, index) => (
              <div
                ref={card}
                key={index}
                className={`min-w-[385px] md:min-w-[420px] xl:min-w-[531px] p-8 rounded-lg border border-[#006fe3] flex-col justify-center items-end gap-2 inline-flex`}
              >
                <div className="self-stretch text-[#006fe3] text-base md:text-lg font-normal font-['Sora']">
                  {keynote.name}
                </div>
                {keynote.items.map((item, idx) => (
                  <div
                    key={idx}
                    className="self-stretch justify-center items-center gap-2 inline-flex"
                  >
                    <Checkmark className="w-6 h-6 text-[#006fe3]" />
                    <div className="grow shrink basis-0 text-[#090909] text-sm md:text-base xl:text-lg font-normal font-['Sora']">
                      {item}
                    </div>
                  </div>
                ))}
              </div>
            ))}
          </div>
        </div>
      </Container>
    </div>
  );
};

export default page;
